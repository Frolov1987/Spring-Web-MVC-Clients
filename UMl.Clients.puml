@startuml
interface org.example.app.repository.BaseRepository {
~ void save(T)
~ List<T> fetchAll()
~ T fetchById(Long)
~ void delete(Long)
}
class org.example.app.controllers.ClientController {
- ClientService service
+ String viewHome(Model)
+ String addClient(Model)
+ RedirectView handleClient(Client,HttpServletRequest)
+ RedirectView deleteClient(Long,HttpServletRequest)
+ String updateClient(Long,Model)
}
class org.example.app.repository.impl.ClientRepositoryImpl {
- SessionFactory sessionFactory
+ void save(Client)
+ List<Client> fetchAll()
+ Client fetchById(Long)
+ void delete(Long)
}
class org.example.app.config.AppContext {
- Environment environment
+ LocalSessionFactoryBean sessionFactory()
+ DataSource dataSource()
- Properties hibernateProperties()
+ HibernateTransactionManager getTransactionManager()
}
class org.example.app.service.impl.ClientServiceImpl {
~ ClientRepository repository
+ void save(Client)
+ List<Client> fetchAll()
+ Client fetchById(Long)
+ void delete(Long)
}
class org.example.app.entity.Client {
- Long id
- String firstname
- String lastname
- String phone
}
interface org.example.app.service.BaseService {
~ void save(T)
~ List<T> fetchAll()
~ T fetchById(Long)
~ void delete(Long)
}
class org.example.app.config.WebMvcConfig {
+ InternalResourceViewResolver resolver()
+ void addResourceHandlers(ResourceHandlerRegistry)
}
interface org.example.app.repository.impl.ClientRepository {
~ void save(Client)
~ List<Client> fetchAll()
~ Client fetchById(Long)
~ void delete(Long)
}
interface org.example.app.service.impl.ClientService {
~ void save(Client)
~ List<Client> fetchAll()
~ Client fetchById(Long)
~ void delete(Long)
}
class org.example.app.config.AppInitializer {
# Class<?>[] getRootConfigClasses()
# Class<?>[] getServletConfigClasses()
# String[] getServletMappings()
}


org.example.app.repository.impl.ClientRepository <|.. org.example.app.repository.impl.ClientRepositoryImpl
org.example.app.service.impl.ClientService <|.. org.example.app.service.impl.ClientServiceImpl
org.springframework.web.servlet.config.annotation.WebMvcConfigurer <|.. org.example.app.config.WebMvcConfig
org.example.app.repository.BaseRepository <|-- org.example.app.repository.impl.ClientRepository
org.example.app.service.BaseService <|-- org.example.app.service.impl.ClientService
org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer <|-- org.example.app.config.AppInitializer
@enduml